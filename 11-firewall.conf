filter {
  if "pf" in [tags] and [prog] =~ /^filterlog/ {
    grok {
      add_tag => [ "firewall" ]
      patterns_dir => ["/etc/logstash/conf.d/patterns"]
      match => [ "message", "%{PF_LOG_DATA}%{PF_IP_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}",
                 "message", "%{PF_IPv4_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}",
                 "message", "%{PF_IPv6_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}"]
    }
    mutate {
      lowercase => [ 'proto' ]
    }
    #Source
    mutate {
    #  add_field => { "[source][ip]" => "%{src_ip}"}
      rename => { "src_ip" => "[source][ip]"}
      add_field => { "[source][address]" => "%{[source][ip]}"}
    #  add_field => { "[source][port]" => "%{src_port}"}
      add_field => { "[source][bytes]" => "%{length}"}
    }
	if [src_port] {
		mutate {
			rename => { "src_port" => "[source][port]"}
		}
	}
    cidr {
      address => [ "%{[source][ip]}" ]
      network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
      add_field => { "[src_locality]" => "private" }
    }
    if ![src_locality] {
      geoip {
        add_tag => [ "GeoIP" ]
        source => "[source][ip]"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        target => "[source][geo]"
      }
      geoip {
       default_database_type => 'ASN'
       database => '/etc/logstash/GeoLite2-ASN.mmdb'
       #cache_size => 5000
       source => "[source][ip]"
       target => "[source][as]"
     }
     mutate {
       rename => { "[source][as][asn]" => "[source][as][number]"}
       rename => { "[source][as][as_org]" => "[source][as][organization][name]"}
     }
    }
    #Destination
    mutate {
    #  add_field => { "[destination][ip]" => "%{dest_ip}"}
      rename => { "dest_ip" => "[destination][ip]"}
      add_field => { "[destination][address]" => "%{[destination][ip]}"}
    #  add_field => { "[destination][port]" => "%{src_port}"}
      add_field => { "[destination][bytes]" => "%{length}"}
    }
	if [dest_port] {
		mutate {
			rename => { "dest_port" => "[destination][port]"}
		}
	}
    cidr {
      address => [ "%{[destination][ip]}" ]
      network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
      add_field => { "[dest_locality]" => "private" }
    }
    if ![dest_locality] {
      geoip {
        add_tag => [ "GeoIP" ]
        source => "[destination][ip]"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        target => "[destination][geo]"
      }
      geoip {
       default_database_type => 'ASN'
       database => '/etc/logstash/GeoLite2-ASN.mmdb'
       #cache_size => 5000
       source => "[destination][ip]"
       target => "[destination][as]"
     }
     mutate {
       rename => { "[destination][as][asn]" => "[destination][as][number]"}
       rename => { "[destination][as][as_org]" => "[destination][as][organization][name]"}
     }
    }
    #Network
    mutate {
      add_field => { "[network][direction]" => "%{direction}bound"}
      add_field => { "[network][iana_number]" => "%{proto_id}"}
      add_field => { "[network][proto]" => "%{proto}"}
      add_field => { "[network][type]" => "ipv%{ip_ver}"}
    }
    #Event
    mutate {
      add_field => { "[event][action]" => "%{action}"}
      add_field => { "[event][dataset]" => "firewall"}
      add_field => { "[event][id]" => "%{id}"}
      add_field => { "[event][original]" => "%{message}"}
    }
  }
}
