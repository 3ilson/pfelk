filter {
  if "pf" in [tags] and [prog] =~ /^filterlog/ {
    grok {
      add_tag => [ "firewall" ]
      patterns_dir => ["/etc/logstash/conf.d/patterns"]
      match => [ "message", "%{PF_LOG_DATA}%{PF_IP_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}",
                 "message", "%{PF_IPv4_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}",
                 "message", "%{PF_IPv6_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}"]
    }
    mutate {
      lowercase => [ 'proto' ]
    }
    #Source
    mutate {
      add_field => { "[source][ip]" => "%{src_ip}"}
      add_field => { "[source][address]" => "%{src_ip}"}
      add_field => { "[source][port]" => "%{src_port}"}
      add_field => { "[source][bytes]" => "%{length}"}
    }
    cidr {
      address => [ "%{[src_ip]}" ]
      network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
      add_field => { "[@metadata][src_locality]" => "private" }
    }
    if ![@metadata][src_locality] {
      geoip {
        add_tag => [ "GeoIP" ]
        source => "src_ip"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        target => [source][geo]
      }
      geoip {
       default_database_type => 'ASN'
       database => '/etc/logstash/GeoLite2-ASN.mmdb'
       cache_size => 5000
       source => "src_ip"
       target => [source][as]
      # worked in v.2.4: fields => ['asn','number']
      # fields => ['autonomous_system_number, autonomous_system_organization']
      # add_field => [ '[geoasn][asn]', '%{[geoasn][autonomous_system_organization]}'  ]
      # add_field => [ '[geoasn][number]', '%{[geoasn][autonomous_system_number]}'  ]
     }
    }
    #Destination
    mutate {
      add_field => { "[destination][ip]" => "%{dest_ip}"}
      add_field => { "[destination][address]" => "%{dest_ip}"}
      add_field => { "[destination][port]" => "%{dest_port}"}
      add_field => { "[destination][bytes]" => "%{length}"}
    }
    cidr {
      address => [ "%{[dest_ip]}" ]
      network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
      add_field => { "[@metadata][dest_locality]" => "private" }
    }
    if ![@metadata][dest_locality] {
      geoip {
        add_tag => [ "GeoIP" ]
        source => "dest_ip"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        target => [destination][geo]
      }
      geoip {
       default_database_type => 'ASN'
       database => '/etc/logstash/GeoLite2-ASN.mmdb'
       cache_size => 5000
       source => "dest_ip"
       target => [destination][as]
      # worked in v.2.4: fields => ['asn','number']
      # fields => ['autonomous_system_number, autonomous_system_organization']
      # add_field => [ '[geoasn][asn]', '%{[geoasn][autonomous_system_organization]}'  ]
      # add_field => [ '[geoasn][number]', '%{[geoasn][autonomous_system_number]}'  ]
     }
    }
    #Network
    mutate {
      add_field => { "[network][direction]" => "%{direction}bound"}
      add_field => { "[network][iana_number]" => "%{proto_id}"}
      add_field => { "[network][proto]" => "%{transport}"}
      add_field => { "[network][type]" => "ipv%{ip_ver}"}event.action
    }
    #Event
    mutate {
      add_field => { "[event][action]" => "%{action}"}
      add_field => { "[event][dataset]" => "firewall"}
      add_field => { "[event][id]" => "%{id}"}
      add_field => { "[event][original]" => "%{message}"}
    }
  }
}
